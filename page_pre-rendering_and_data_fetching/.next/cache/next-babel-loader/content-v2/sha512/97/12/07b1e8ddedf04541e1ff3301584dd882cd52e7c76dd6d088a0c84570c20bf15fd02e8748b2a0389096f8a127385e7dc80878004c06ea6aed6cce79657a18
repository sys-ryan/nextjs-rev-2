{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ryankim/Downloads/nextjs-rev-2/page_pre-rendering_and_data_fetching/pages/last-sales.js\";\nimport { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\nexport async function getStaticProps() {\n  fetch(\"https://nextjs-course-84ee0-default-rtdb.firebaseio.com/sales.json\").then(response => response.json()).then(data => {\n    const transformedSales = [];\n\n    for (const key in data) {\n      transformedSales.push({\n        id: key,\n        username: data[key].username,\n        volume: data[key].volume\n      });\n    }\n  });\n}\n\nconst LastSalesPage = props => {\n  const {\n    0: sales,\n    1: setSales\n  } = useState(); // const [isLoading, setIsLoading] = useState(false);\n\n  const fetcher = (...args) => fetch(...args).then(res => res.json()).then(data => {\n    const transformedSales = [];\n\n    for (const key in data) {\n      transformedSales.push({\n        id: key,\n        username: data[key].username,\n        volume: data[key].volume\n      });\n    }\n\n    setSales(transformedSales);\n  });\n\n  const {\n    error\n  } = useSWR(\"https://nextjs-course-84ee0-default-rtdb.firebaseio.com/sales.json\", fetcher); // useEffect(() => {\n  //   setIsLoading(true);\n  //   fetch(\"https://nextjs-course-84ee0-default-rtdb.firebaseio.com/sales.json\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       const transformedSales = [];\n  //       for (const key in data) {\n  //         transformedSales.push({\n  //           id: key,\n  //           username: data[key].username,\n  //           volume: data[key].volume,\n  //         });\n  //       }\n  //       setSales(transformedSales);\n  //       setIsLoading(false);\n  //     });\n  // }, []);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Failed to load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!sales) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sales.map(sale => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [sale.username, \" - $\", sale.volume]\n    }, sale.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LastSalesPage;","map":{"version":3,"sources":["/Users/ryankim/Downloads/nextjs-rev-2/page_pre-rendering_and_data_fetching/pages/last-sales.js"],"names":["useEffect","useState","useSWR","getStaticProps","fetch","then","response","json","data","transformedSales","key","push","id","username","volume","LastSalesPage","props","sales","setSales","fetcher","args","res","error","map","sale"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,KAAnB;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrCC,EAAAA,KAAK,CAAC,oEAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,UAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtBC,MAAAA,gBAAgB,CAACE,IAAjB,CAAsB;AACpBC,QAAAA,EAAE,EAAEF,GADgB;AAEpBG,QAAAA,QAAQ,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,QAFA;AAGpBC,QAAAA,MAAM,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI;AAHE,OAAtB;AAKD;AACF,GAZH;AAaD;;AAED,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBjB,QAAQ,EAAlC,CAD+B,CAE/B;;AAEA,QAAMkB,OAAO,GAAG,CAAC,GAAGC,IAAJ,KACdhB,KAAK,CAAC,GAAGgB,IAAJ,CAAL,CACGf,IADH,CACSgB,GAAD,IAASA,GAAG,CAACd,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,UAAMC,gBAAgB,GAAG,EAAzB;;AAEA,SAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtBC,MAAAA,gBAAgB,CAACE,IAAjB,CAAsB;AACpBC,QAAAA,EAAE,EAAEF,GADgB;AAEpBG,QAAAA,QAAQ,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,QAFA;AAGpBC,QAAAA,MAAM,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI;AAHE,OAAtB;AAKD;;AAEDI,IAAAA,QAAQ,CAACT,gBAAD,CAAR;AACD,GAdH,CADF;;AAiBA,QAAM;AAAEa,IAAAA;AAAF,MAAYpB,MAAM,CACtB,oEADsB,EAEtBiB,OAFsB,CAAxB,CArB+B,CAyB/B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAIG,KAAJ,EAAW;AACT,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACL,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,cACGA,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT;AAAA,iBACGA,IAAI,CAACX,QADR,UACsBW,IAAI,CAACV,MAD3B;AAAA,OAASU,IAAI,CAACZ,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9DD;;AAgEA,eAAeG,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport useSWR from \"swr\";\n\nexport async function getStaticProps() {\n  fetch(\"https://nextjs-course-84ee0-default-rtdb.firebaseio.com/sales.json\")\n    .then((response) => response.json())\n    .then((data) => {\n      const transformedSales = [];\n\n      for (const key in data) {\n        transformedSales.push({\n          id: key,\n          username: data[key].username,\n          volume: data[key].volume,\n        });\n      }\n    });\n}\n\nconst LastSalesPage = (props) => {\n  const [sales, setSales] = useState();\n  // const [isLoading, setIsLoading] = useState(false);\n\n  const fetcher = (...args) =>\n    fetch(...args)\n      .then((res) => res.json())\n      .then((data) => {\n        const transformedSales = [];\n\n        for (const key in data) {\n          transformedSales.push({\n            id: key,\n            username: data[key].username,\n            volume: data[key].volume,\n          });\n        }\n\n        setSales(transformedSales);\n      });\n\n  const { error } = useSWR(\n    \"https://nextjs-course-84ee0-default-rtdb.firebaseio.com/sales.json\",\n    fetcher\n  );\n  // useEffect(() => {\n  //   setIsLoading(true);\n  //   fetch(\"https://nextjs-course-84ee0-default-rtdb.firebaseio.com/sales.json\")\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       const transformedSales = [];\n\n  //       for (const key in data) {\n  //         transformedSales.push({\n  //           id: key,\n  //           username: data[key].username,\n  //           volume: data[key].volume,\n  //         });\n  //       }\n\n  //       setSales(transformedSales);\n  //       setIsLoading(false);\n  //     });\n  // }, []);\n\n  if (error) {\n    return <p>Failed to load</p>;\n  }\n\n  if (!sales) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <ul>\n      {sales.map((sale) => (\n        <li key={sale.id}>\n          {sale.username} - ${sale.volume}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default LastSalesPage;\n"]},"metadata":{},"sourceType":"module"}