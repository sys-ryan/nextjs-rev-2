{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ryankim/Downloads/nextjs-rev-2/page_pre-rendering_and_data_fetching/pages/[pid].js\";\nimport path from \"path\";\nimport fs from \"fs/promises\";\n\nconst getData = async () => {\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n  const jsonData = await fs.readFile(filePath);\n  const data = JSON.parse(jsonData);\n  return data;\n};\n\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  const productId = params.pid;\n  const data = await getData();\n  const product = data.products.find(product => product.id === productId);\n  return {\n    props: {\n      loadedProduct: product\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const data = await getData();\n  const ids = data.products.map(product => product.id);\n  const params = ids.map(id => ({\n    params: {\n      pid: id\n    }\n  }));\n  return {\n    // paths: [{ params: { pid: \"p1\" } }],\n    paths: params,\n    fallback: \"blocking\"\n  };\n}\n\nconst productDetailpage = props => {\n  const {\n    loadedProduct\n  } = props; // if (!loadedProduct) {\n  //   return <p>Loading...</p>;\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n1;\nexport default productDetailpage;","map":{"version":3,"sources":["/Users/ryankim/Downloads/nextjs-rev-2/page_pre-rendering_and_data_fetching/pages/[pid].js"],"names":["path","fs","getData","filePath","join","process","cwd","jsonData","readFile","data","JSON","parse","getStaticProps","context","params","productId","pid","product","products","find","id","props","loadedProduct","getStaticPaths","ids","map","paths","fallback","productDetailpage","title","description"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,EAAP,MAAe,aAAf;;AAEA,MAAMC,OAAO,GAAG,YAAY;AAC1B,QAAMC,QAAQ,GAAGH,IAAI,CAACI,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,MAAzB,EAAiC,oBAAjC,CAAjB;AACA,QAAMC,QAAQ,GAAG,MAAMN,EAAE,CAACO,QAAH,CAAYL,QAAZ,CAAvB;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAb;AAEA,SAAOE,IAAP;AACD,CAND;;AAOA,OAAO,eAAeG,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AAEA,QAAME,SAAS,GAAGD,MAAM,CAACE,GAAzB;AAEA,QAAMP,IAAI,GAAG,MAAMP,OAAO,EAA1B;AAEA,QAAMe,OAAO,GAAGR,IAAI,CAACS,QAAL,CAAcC,IAAd,CAAoBF,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAeL,SAA/C,CAAhB;AAEA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAEL;AADV;AADF,GAAP;AAKD;AAED,OAAO,eAAeM,cAAf,GAAgC;AACrC,QAAMd,IAAI,GAAG,MAAMP,OAAO,EAA1B;AACA,QAAMsB,GAAG,GAAGf,IAAI,CAACS,QAAL,CAAcO,GAAd,CAAmBR,OAAD,IAAaA,OAAO,CAACG,EAAvC,CAAZ;AACA,QAAMN,MAAM,GAAGU,GAAG,CAACC,GAAJ,CAASL,EAAD,KAAS;AAAEN,IAAAA,MAAM,EAAE;AAAEE,MAAAA,GAAG,EAAEI;AAAP;AAAV,GAAT,CAAR,CAAf;AAEA,SAAO;AACL;AACAM,IAAAA,KAAK,EAAEZ,MAFF;AAGLa,IAAAA,QAAQ,EAAE;AAHL,GAAP;AAKD;;AAED,MAAMC,iBAAiB,GAAIP,KAAD,IAAW;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B,CADmC,CAGnC;AACA;AACA;;AAEA,sBACE;AAAA,4BACE;AAAA,gBAAKC,aAAa,CAACO;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIP,aAAa,CAACQ;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAbD;;AAcA;AACA,eAAeF,iBAAf","sourcesContent":["import path from \"path\";\nimport fs from \"fs/promises\";\n\nconst getData = async () => {\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\");\n  const jsonData = await fs.readFile(filePath);\n  const data = JSON.parse(jsonData);\n\n  return data;\n};\nexport async function getStaticProps(context) {\n  const { params } = context;\n\n  const productId = params.pid;\n\n  const data = await getData();\n\n  const product = data.products.find((product) => product.id === productId);\n\n  return {\n    props: {\n      loadedProduct: product,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const data = await getData();\n  const ids = data.products.map((product) => product.id);\n  const params = ids.map((id) => ({ params: { pid: id } }));\n\n  return {\n    // paths: [{ params: { pid: \"p1\" } }],\n    paths: params,\n    fallback: \"blocking\",\n  };\n}\n\nconst productDetailpage = (props) => {\n  const { loadedProduct } = props;\n\n  // if (!loadedProduct) {\n  //   return <p>Loading...</p>;\n  // }\n\n  return (\n    <>\n      <h1>{loadedProduct.title}</h1>\n      <p>{loadedProduct.description}</p>\n    </>\n  );\n};\n1;\nexport default productDetailpage;\n"]},"metadata":{},"sourceType":"module"}